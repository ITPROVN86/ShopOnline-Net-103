@model IEnumerable<ShopBusinessLogic.Models.Category>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@using X.PagedList.Web.Common;
@{
    ViewData["Title"] = "Trang Danh mục Sản phẩm";
}
<header class="panel-heading">
    Danh mục Sản phẩm
    <div class="pull-right">
        @Html.ActionLink(" Tạo mới", "Create", "Category", null, new { @class = "btn btn-primary fa fa-plus-square-o" })
    </div>
</header>
<div class="panel-body">
    <div class="text-align">
        @{
            if (TempData["AlertMessage"] != null)
            {
                <div id="alertBox" class="alert @TempData["Type"]">
                    @TempData["AlertMessage"]
                </div>
            }
        }
    </div>
    <div class="row form-body">
        @using (Html.BeginForm("Index", "Category", FormMethod.Get, new { id = "form-search" }))
        {
            <div class="form-group">
                <div class="col-md-6">
                    <div class="row">
                        @Html.TextBox("SearchString", TempData["searchString"], null, new { @class = "form-control", @placeholder = "Nhập từ khoá cần tìm kiếm" })
                    </div>
                </div>
                <div class="col-md-6">
                    <button class="btn btn-danger"><i class="fa fa-search"></i> Tìm kiếm</button>
                </div>
            </div>
        }
        <div class="form-group" style="clear:both">&nbsp;</div>
        <div class="form-group">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>
                            @{
                                var sortBy = Context.Request.Query["sortby"] == "name" ? "namedesc" : "name";
                            }
                            <a href="@Url.Action("Index","Category",new {sortBy=sortBy,SearchString=@Context.Request.Query["SearchString"]})">
                                Tên danh mục sản phẩm
                            </a>
                        </th>
                        <th>
                            Trạng thái
                        </th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int dem = 1;
                        int page = Convert.ToInt32(Context.Request.Query["page"]);
                        if (page > 1)
                        {
                            dem = (page - 1) * 5 + 1;
                        }
                    }

                    @foreach (var item in Model)
                    {
                        <tr>
                            <td class="text-center">@dem</td>
                            <td>
                                @Html.DisplayFor(modelItem => item.CategoryName)
                            </td>
                            <td class="text-center">
                                <a href="#" class="btn @(item.Status ? "btn-primary":"btn-danger") btn-active" data-id="@item.CategoryId">@(item.Status ? "Bật" : "Tắt")</a>
                            </td>
                            <td class="text-center">
                                <a asp-action="Edit" title="Cập nhật" asp-route-id="@item.CategoryId" class="btn btn-danger"><i class="fa fa-edit"></i></a>&nbsp;
                                <a href="#" title="Xoá" class="delete-link btn btn-danger" data-id="@item.CategoryId" data-confirm="Bạn có thật sự muốn xoá?" data-toggle="modal" data-target="#confirmModal"><i class="fa fa-times"></i></a>
                            </td>
                        </tr>
                        dem = dem + 1;
                    }
                </tbody>
            </table>
            <div class="form-group">
                @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", "Category", new { ViewBag.SearchName, page, SearchString = @Context.Request.Query["SearchString"], sortby = @Context.Request.Query["sortby"] }),
                         PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                {
                    HttpMethod = "POST",
                    UpdateTargetId = "targetElement",
                    OnSuccess = "onAjaxSuccess",
                    OnFailure = "onAjaxFailure"
                }))
            </div>
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Xác nhận xóa</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="confirmMessage">Bạn có đồng ý thực hiện việc xoá không?</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-danger" id="confirmDelete">Xóa</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    @{
        DateTime currentDate = DateTime.Now;
    }
    <script src="~/admin/controllers/CategoryController.js?@currentDate"></script>
}